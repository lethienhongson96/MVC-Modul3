// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToKhaiYTe.Models;

namespace ToKhaiYTe.Migrations
{
    [DbContext(typeof(MedicalContext))]
    [Migration("20200910093539_CreateTables")]
    partial class CreateTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ToKhaiYTe.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNum")
                        .HasColumnType("int");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<int>("WardId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("ToKhaiYTe.Models.Days", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Day")
                        .HasColumnName("day")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("days");
                });

            modelBuilder.Entity("ToKhaiYTe.Models.District", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnName("_name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Prefix")
                        .HasColumnName("_prefix")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ProvinceId")
                        .HasColumnName("_province_id")
                        .HasColumnType("int");

                    b.ToTable("district");
                });

            modelBuilder.Entity("ToKhaiYTe.Models.Gates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("gates");
                });

            modelBuilder.Entity("ToKhaiYTe.Models.LichSuPhoiNhiem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("TiepXucDongVat")
                        .HasColumnType("bit");

                    b.Property<bool>("TiepXucNguoiNhiem")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("LichSuPhoiNhiems");
                });

            modelBuilder.Entity("ToKhaiYTe.Models.MedicalForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<int>("GatesId")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SymptomId")
                        .HasColumnType("int");

                    b.Property<int>("TravelInfoId")
                        .HasColumnType("int");

                    b.Property<int>("YearOfBirthId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GatesId");

                    b.HasIndex("SymptomId");

                    b.HasIndex("TravelInfoId");

                    b.ToTable("MedicalForms");
                });

            modelBuilder.Entity("ToKhaiYTe.Models.Months", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Month")
                        .HasColumnName("month")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("months");
                });

            modelBuilder.Entity("ToKhaiYTe.Models.Province", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnName("_code")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnName("_name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.ToTable("province");
                });

            modelBuilder.Entity("ToKhaiYTe.Models.Symptom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BuonNon")
                        .HasColumnType("bit");

                    b.Property<bool>("DauHong")
                        .HasColumnType("bit");

                    b.Property<bool>("Ho")
                        .HasColumnType("bit");

                    b.Property<bool>("KhoTho")
                        .HasColumnType("bit");

                    b.Property<int>("LichSuPhoiNhiemId")
                        .HasColumnType("int");

                    b.Property<bool>("NoiBanNgoaiDa")
                        .HasColumnType("bit");

                    b.Property<bool>("Sot")
                        .HasColumnType("bit");

                    b.Property<bool>("TieuChay")
                        .HasColumnType("bit");

                    b.Property<string>("VacxinDaSuDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("XuatHuyetNgoaiDa")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Symptoms");
                });

            modelBuilder.Entity("ToKhaiYTe.Models.TravelInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Airplane")
                        .HasColumnType("bit");

                    b.Property<bool>("Car")
                        .HasColumnType("bit");

                    b.Property<int>("DepartureDateId")
                        .HasColumnType("int");

                    b.Property<int>("DepartureProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntryDateId")
                        .HasColumnType("int");

                    b.Property<int>("EntryProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("RecentInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeatNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Ships")
                        .HasColumnType("bit");

                    b.Property<string>("VehicleNum")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TravelInfos");
                });

            modelBuilder.Entity("ToKhaiYTe.Models.Ward", b =>
                {
                    b.Property<int?>("DistrictId")
                        .HasColumnName("_district_id")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("_name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Prefix")
                        .HasColumnName("_prefix")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ProvinceId")
                        .HasColumnName("_province_id")
                        .HasColumnType("int");

                    b.ToTable("ward");
                });

            modelBuilder.Entity("ToKhaiYTe.Models.Years", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Year")
                        .HasColumnName("year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("years");
                });

            modelBuilder.Entity("ToKhaiYTe.Models.MedicalForm", b =>
                {
                    b.HasOne("ToKhaiYTe.Models.Gates", "Gates")
                        .WithMany("MedicalForms")
                        .HasForeignKey("GatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToKhaiYTe.Models.Symptom", "Symptom")
                        .WithMany("MedicalForms")
                        .HasForeignKey("SymptomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToKhaiYTe.Models.TravelInfo", "TravelInfo")
                        .WithMany("MedicalForms")
                        .HasForeignKey("TravelInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
